#Modificado por:
#Carabeo Lopez Darwin ALberto
#Hernandez Mendoza Abigail
#Hernandez Tlapa Emmanuel
#Lara Hernandez Daniel
#Villava Cervantes Jovany
class Robot:
    """
    Clase que representa un robot genérico.
    Tiene un nombre, un nivel de batería y velocidad.
    """

    def __init__(self, nombre, bateria=100):
        # Guardamos el nombre del robot en un atributo
        self.nombre = nombre
        # Guardamos la batería inicial (por defecto 100)
        self.bateria = bateria
        # Estado inicial: apagado
        self.encendido = False
        # Velocidad inicial (por defecto: "lento")
        self.velocidad_actual = "lento"

    def encender(self):
        # Solo puede encenderse si hay batería
        if self.bateria > 0:
            self.encendido = True
            print(f"{self.nombre} está encendido.")
        else:
            print(f"{self.nombre} no puede encenderse: batería agotada.")

    def apagar(self):
        # Cambiamos el estado a apagado
        self.encendido = False
        print(f"{self.nombre} se apagó.")

    def describir(self):
        # Devuelve un texto con la información del robot
        estado = "encendido" if self.encendido else "apagado"
        return f"Robot {self.nombre} | Batería: {self.bateria}% | Estado: {estado} | Velocidad: {self.velocidad_actual}"

    def cambiar_velocidad(self, modo):
        """
        Cambia la velocidad del robot.
        Puede ser 'lento' o 'rápido'.
        """
        if modo == "lento" or modo == "rápido":
            self.velocidad_actual = modo
            print(f"{self.nombre} ahora va a velocidad {self.velocidad_actual}.")
        else:
            print("Modo de velocidad no válido. Usa 'lento' o 'rápido'.")

# Creamos un objeto (instancia) de la clase Robot
robot1 = Robot("R2D2", bateria=80)

# Usamos sus métodos
print(robot1.describir())   # Muestra la información inicial
robot1.encender()           # Cambia el estado a encendido
print(robot1.describir())   # Ahora debe mostrar "encendido"
robot1.apagar()             # Cambia el estado a apagado
# Definimos una subclase que hereda de Robot
class RobotMovil(Robot):
    """
    Robot que puede moverse en un plano 2D.
    Hereda de Robot y añade atributos x, y.
    """

    def __init__(self, nombre, bateria=100, x=0, y=0):
        # Llamamos al constructor de la clase base
        super().__init__(nombre, bateria)
        # Añadimos atributos propios
        self.x = x
        self.y = y

    def mover(self, dx, dy):
        # Solo se mueve si está encendido
        if self.encendido and self.bateria > 0:
            self.x += dx
            self.y += dy
            # Cada movimiento consume 10% de batería
            self.bateria = max(0, self.bateria - 10)
            print(f"{self.nombre} se movió a ({self.x}, {self.y}).")
        else:
            print(f"{self.nombre} no puede moverse (apagado o sin batería).")

    # Sobrescribimos el método describir
    def describir(self):
        estado = "encendido" if self.encendido else "apagado"
        return (f"RobotMovil {self.nombre} | Posición: ({self.x}, {self.y}) | "
                f"Batería: {self.bateria}% | Estado: {estado}")



# Creamos un objeto de tipo RobotMovil
robot2 = RobotMovil("Wall-E", bateria=50)

print(robot2.describir())  # Muestra la información inicial
robot2.encender()          # Encendemos el robot
robot2.mover(2, 3)         # Lo movemos en el plano
print(robot2.describir())  # Ahora debe mostrar la nueva posición y batería

# Creamos un objeto (instancia) de la clase RobotMovil con el nombre BD1
robot3 = RobotMovil("BD1", bateria=64)

# Usamos sus métodos
print(robot3.describir())     # Información inicial (apagado, lento)
robot3.encender()             # Encendemos el robot
robot3.cambiar_velocidad("rápido")  # Cambiamos la velocidad
robot3.mover(2, 3)            # Se mueve e imprime también la velocidad
print(robot3.describir())     # Ahora muestra encendido y rápido
robot3.apagar()               # Apagamos

# Creamos un objeto (instancia) de la clase Robot con el nombre BD1
robot4 = Robot("R4D4", bateria=90)

# Usamos sus métodos
print(robot4.describir())   # Muestra la información inicial
robot4.encender()           # Cambia el estado a encendido
print(robot4.describir())   # Ahora debe mostrar "encendido"
robot4.encender()             # Cambia el estado a apagado

# Creamos una lista con robots de distintos tipos
robots = [robot1, robot2,robot3,robot4]

# Recorremos la lista y llamamos al mismo método 'describir'
for r in robots:
    print(r.describir())  # Cada objeto responde según su clase
